var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Ewalder","category":"page"},{"location":"#Ewalder","page":"Home","title":"Ewalder","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for the Julia package Ewalder.jl to perform Ewald summation.","category":"page"},{"location":"#Usage-example","page":"Home","title":"Usage example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Calculate the Madelung constant for NaCl using its primitive cell.","category":"page"},{"location":"","page":"Home","title":"Home","text":"import Ewalder\n\nlatvecs = [[1,1,0], [1,0,1], [0,1,1]]\npos = [[0,0,0], [1,1,1]]\ncharges = [1, -1]\nsys = Ewalder.System(; latvecs, pos)\nE = Ewalder.energy(sys; charges)\n@assert E ≈ -1.74756459","category":"page"},{"location":"","page":"Home","title":"Home","text":"See the Ewalder/test directory for more usage examples.","category":"page"},{"location":"#What-is-Ewald-summation?","page":"Home","title":"What is Ewald summation?","text":"","category":"section"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The Coulomb energy between two point charges is q_1 q_2  4piepsilon_0 r, where r is the separation distance, and epsilon_0 is a physical constant (the vacuum permittivity). For a system with multiple charges, the total Coulomb energy is a sum of all such pair interactions. A frequent goal is to estimate bulk material properties using computers simulations at much smaller scales. Here, it is very effective to impose periodic boundary conditions on the finite size simulation volume. Doing so effectively creates infinitely many copies (image charges) of the charges present in the original, finite size system. Ewald summation accounts for the interactions of all these charges through long-range (1r) pair interactions. In the Ewalder example above, the output E represents the dimensionless energy per ion of the NaCl crystal, i.e., table salt.","category":"page"},{"location":"","page":"Home","title":"Home","text":"There are some mathematical subtleties to Ewald summation. First, the system must be net charge neutral, or the macroscopic Coulomb energy will diverge. Second, if the original system has a nonzero net dipole moment (i.e., a polarization), then the infinite sum over periodic images becomes only conditionally convergent, and the result depends on the order of summation. This conditional convergence reflects a true ambiguity–-the physical conditions at the surface of the material sample cannot be neglected. The simplest possibility, employed here, is to impose so-called \"tin foil boundary conditions,\" which eliminate bound charge from the sample surface.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Ewald summation works by decomposing the Coulomb energy into two parts: (1) A real-space part, evaluated as a sum over point charges at short range, and (2) a Fourier space part, which captures the long-range interactions through a sum over mathbf k-vectors, which label frequencies in the decomposition of total charge density. The Ewalder implementation uses a straightforward algorithm that scales as N^32 for increasing system sizes N (assuming efficient calculation of the neighbor list). For very large scale simulations, it would be preferable to use instead a method that scales near-linearly with N, such as Smooth Particle Mesh Ewald.","category":"page"},{"location":"#Mathematical-details","page":"Home","title":"Mathematical details","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The full Ewald method is summarized below. See our mathematical writeup (PDF format) for the derivation. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"The Ewald energy for a system of charges decomposes into three parts,","category":"page"},{"location":"","page":"Home","title":"Home","text":"E = E_S + E_L - E_mathrmself","category":"page"},{"location":"","page":"Home","title":"Home","text":"The \"short-range\" energy is a sum of pairwise interactions real-space,","category":"page"},{"location":"","page":"Home","title":"Home","text":"E_S =frac14piepsilon_0frac12 sum_ijmathbfnvphantomsum fracq_iq_jr_ijmathbfnmathrmerfcleft(fracr_ijmathbfnsqrt2sigmaright)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Observe that ions indexed by i and j can interact across periodic system images, mathbfn in mathbbR^3. The prime in sum indicates that infinite self-interactions (i=j and mathbfn=mathbf0) should be excluded from the sum. The periodic system may be sheared and the distance between image charges,","category":"page"},{"location":"","page":"Home","title":"Home","text":"mathbfr_ijmathbfn = bigmathbfr_j - mathbfr_i + sum_alpha n_alpha mathbfa_alpha big","category":"page"},{"location":"","page":"Home","title":"Home","text":"involves three (super-) lattice vectors mathbfa_alpha. The complementary error function mathrmerfc(x) decays rapidly in its argument x, such that the real-space interactions are localized to r_ijmathbfn lesssim sigma. The length scale sigma is a tuneable parameter that can be adjusted for numerical efficiency.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The \"long-range\" energy is a sum over Fourier modes","category":"page"},{"location":"","page":"Home","title":"Home","text":"E_L=frac12Vepsilon_0sum_mathbfkneqmathbf0frace^-sigma^2k^22k^2lefthatrho(mathbfk)right^2","category":"page"},{"location":"","page":"Home","title":"Home","text":"involving the Fourier transform of charge density,","category":"page"},{"location":"","page":"Home","title":"Home","text":"hatrho(mathbfk)=sum_iq_ie^-imathbfkcdotmathbfr_i","category":"page"},{"location":"","page":"Home","title":"Home","text":"and the system volume V = (mathbfa_1 times mathbfa_2) cdot mathbfa_3. The sum runs overs Fourier modes consistent with the assumed periodicity, i.e. mathbfk = sum_alpha m_alpha mathbfb_alpha for integer m_alpha and reciprocal (super-) lattice vectors defined to satisfy mathbfa_alpha cdot mathbfb_beta = 2pi delta_alpha beta. The assumption of charge neutrality, hatrho(mathbf0) = 0, justifies the removal of the mode mathbfk=mathbf0. Due to the Gaussian decay, only modes with mathbfk lesssim 1sigma are relevant to the sum.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The energy E_L can equivalently be viewed as an infinite real-space sum over Gaussian charge clouds. This periodic sum includes artificial \"self\" interactions,","category":"page"},{"location":"","page":"Home","title":"Home","text":"E_mathrmself=frac14piepsilon_0frac1sqrt2pisigmasum_iq_i^2","category":"page"},{"location":"","page":"Home","title":"Home","text":"which must be removed from the final energy output E.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Both real- and Fourier- space sums are rapidly convergent. Ewalder truncates these sums using the inequalities,","category":"page"},{"location":"","page":"Home","title":"Home","text":"r_ijmathbfn leq c_0 sqrt2 sigma \nmathbfk_mathbfm leq c_0 sqrt2  sigma","category":"page"},{"location":"","page":"Home","title":"Home","text":"where c_0 is a dimensionless parameter (defaulting to c_0 = 6 for about 13 digits of accuracy).","category":"page"},{"location":"","page":"Home","title":"Home","text":"Apart from the small truncation error, the energy E is mathematically independent of the parameter sigma. A good choice of sigma should balance between the cost of the real-space sums in E_S and the Fourier-space sums in E_L. Consider systems of fixed density, but with varying sizes controlled by the number of ions N. This package selects","category":"page"},{"location":"","page":"Home","title":"Home","text":"sigma = L  c_1 N^16","category":"page"},{"location":"","page":"Home","title":"Home","text":"where c_1 is a dimensionless parameter (defaulting to c_1 = 2) and L = V^13. This choice achieves, in principle, a total computational cost that scales as O(N^32), provided that the ion neighbor lists are calculated efficiently. For maximum efficiency, the user should provide a neighbor list. If one is not provided, this package will perform inefficient, brute-force calculation of the neighbor list.","category":"page"},{"location":"","page":"Home","title":"Home","text":"In addition to point charges, Ewalder also allows specification of point dipoles, each of which generates an electrostatic potential that decays like 1r^2, and can similarly be handled using Ewald summation. The final formulas can be found in our PDF note.","category":"page"},{"location":"#API","page":"Home","title":"API","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Ewalder]","category":"page"},{"location":"#Ewalder.System","page":"Home","title":"Ewalder.System","text":"System(; latvecs::Vector{NTuple{3, Float}},\n         pos::Vector{Vec3}\n         c0::Float64 = 6.0\n         c1::Float64 = 2.0)\n\nCreate a system that is periodic in each of the three supercell lattice vectors latvecs and with atom positions pos. The optional parameter c0 controls accuracy of Ewald summation. The default is c0 = 6, which yields errors of order 1e-12 (smaller c0 will run faster). The optional parameter c1 controls the balance between real and Fourier space summation (larger c1 implies more real-space summation).\n\n\n\n\n\n","category":"type"},{"location":"#Ewalder.energy-Tuple{System}","page":"Home","title":"Ewalder.energy","text":"energy(sys::System; charges=Float64[], dipoles=Vec3[])\n\nCalculate the Ewald energy in units of 14piepsilon_0 for a periodic system of charges and dipoles. If either charge or dipole parameters are omitted, they will be assumed zero. A neighbors list can also be optionally provided; see the source code for details.\n\n\n\n\n\n","category":"method"}]
}
